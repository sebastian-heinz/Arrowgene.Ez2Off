using System.Collections.Generic;

namespace Arrowgene.Ez2Off.Data.Hdr
{
    /// <summary>
    /// Repository for all keys.
    /// </summary>
    public class HdrKey
    {
        public static HdrKey Png()
        {
            return new HdrKey
            {
                CryptoExtension = HdrCryptoExtension.png,
                Header = new List<byte[]>
                {
                    new byte[] {0x89, 0x50, 0x4E, 0x47}
                },
                Init = new byte[]
                {
                    0x78, 0x56, 0x34, 0x12, 0x78, 0x56, 0x78, 0x56, 0x78, 0x56, 0xBC, 0x9A, 0x78, 0x56, 0xFF, 0xDE
                },
                Key = new byte[]
                {
                    0x54, 0x2B, 0xB5, 0x64, 0x0C, 0xAE, 0x15, 0x30, 0xC4, 0x9D, 0x52, 0x76, 0x0C, 0xC4, 0xA7, 0xAD
                },
                Hash = new byte[]
                {
                    0x90, 0xEB, 0xF3, 0xE4, 0xBB, 0xCD, 0x7E, 0xF2, 0xD6, 0xCF, 0x6D, 0x4B, 0x12, 0x08, 0x58, 0x92,
                    0x07, 0x1F, 0x6C, 0x61, 0x0C, 0xAE, 0x15, 0x30, 0x3E, 0x09, 0x7F, 0xBA, 0x0E, 0xED, 0xFA, 0x89,
                    0xC1, 0x38, 0x58, 0x46, 0xAD, 0xF8, 0xB0, 0xC5, 0x1B, 0x89, 0xC5, 0x68, 0xD3, 0x19, 0x90, 0x1B,
                    0x08, 0x02, 0xFC, 0x5B, 0x29, 0x93, 0x9D, 0x4A, 0xC5, 0xB7, 0xB3, 0x5E, 0x3A, 0x07, 0x79, 0x42,
                    0xD1, 0x0B, 0x68, 0x0D, 0x3F, 0x08, 0x83, 0x67, 0x54, 0x2B, 0xB5, 0x64, 0x5D, 0x02, 0xAC, 0xFD,
                    0xF4, 0x9D, 0xAA, 0xE6, 0x1E, 0x3B, 0xD3, 0xFE, 0x63, 0xBE, 0x01, 0xDA, 0x44, 0xF7, 0x8B, 0xEF,
                    0xE1, 0x23, 0x5B, 0x76, 0xB4, 0xCD, 0x85, 0x09, 0x56, 0x56, 0x05, 0xE5, 0x53, 0x19, 0x13, 0x49,
                    0x22, 0x32, 0x47, 0x9D, 0x49, 0x25, 0xB2, 0x6B, 0x00, 0x73, 0x16, 0x43, 0x87, 0x43, 0x70, 0xD5,
                    0x5C, 0x37, 0xBA, 0x66, 0x02, 0x03, 0xE2, 0x98, 0x88, 0x03, 0xA3, 0xCE, 0x09, 0xF6, 0xB6, 0x57,
                    0x62, 0xD5, 0x39, 0xD2, 0x52, 0xEF, 0x42, 0x9E, 0xF5, 0x1D, 0x97, 0x8A, 0x96, 0x6E, 0x33, 0xDC,
                    0xCC, 0x12, 0x3D, 0x8B, 0x2C, 0x2E, 0xE8, 0x61, 0x2A, 0x23, 0x20, 0x0B, 0x69, 0x5F, 0x5C, 0xF2,
                    0x78, 0x4A, 0x68, 0xF6, 0xFF, 0xFA, 0xB8, 0x70, 0x7C, 0x10, 0x10, 0xEC, 0xB2, 0x5F, 0xFD, 0xF1,
                    0x36, 0xDC, 0x1B, 0x63, 0x6B, 0xE2, 0xC8, 0x1C, 0x48, 0x1B, 0x99, 0x1E, 0x0C, 0xC4, 0xA7, 0xAD,
                    0xB3, 0x8F, 0x31, 0x0E, 0xBB, 0x7C, 0x56, 0x36, 0x88, 0x19, 0xF1, 0x9B, 0x7F, 0x8A, 0x88, 0x74,
                    0x14, 0x0F, 0xB8, 0xBA, 0x18, 0x32, 0xBD, 0x89, 0xD4, 0xAB, 0x80, 0xD9, 0x1C, 0x3F, 0x2C, 0x4F,
                    0x25, 0x23, 0x78, 0x6F, 0x9F, 0xD3, 0x7E, 0x26, 0x19, 0x17, 0x16, 0x25, 0x16, 0x4A, 0xCA, 0x8D,
                    0xC4, 0x9D, 0x52, 0x76, 0xC9, 0xB0, 0xE1, 0xC7, 0x47, 0xCC, 0x13, 0x97, 0xCA, 0xAB, 0x0C, 0xEB,
                    0xF0, 0x0A, 0xDD, 0x02, 0x23, 0x4B, 0x7D, 0xFC, 0x2C, 0xD6, 0x7D, 0xB6, 0x8E, 0x49, 0x7D, 0x6A
                }
            };
        }

        public static HdrKey Bin()
        {
            return new HdrKey
            {
                CryptoExtension = HdrCryptoExtension.bin,
                Header = new List<byte[]>
                {
                    new byte[] {0x45, 0x5A, 0x49, 0x44, 0x41, 0x54, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00}, //EZIDATA
                    new byte[] {0x4D, 0x5F, 0x51, 0x55, 0x45, 0x53, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00}, //M_QUEST
                    new byte[] {0x4D, 0x5F, 0x4D, 0x55, 0x53, 0x49, 0x43, 0x00, 0x00, 0x00, 0x00, 0x00}, //M_MUSIC
                    new byte[] {0x4D, 0x5F, 0x43, 0x41, 0x52, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //M_CARD
                    new byte[] {0x4D, 0x5F, 0x49, 0x54, 0x45, 0x4D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //M_ITEM
                    new byte[] {0x4D, 0x5F, 0x49, 0x44, 0x5F, 0x46, 0x49, 0x4C, 0x54, 0x45, 0x52, 0x00}, //M_ID_FILTER
                },
                Init = new byte[]
                {
                    0x78, 0x56, 0x34, 0x12, 0x78, 0x56, 0x78, 0x56, 0x78, 0x56, 0xBC, 0x9A, 0x78, 0x56, 0xFF, 0xDE
                },
                Key = new byte[]
                {
                    0x7A, 0x92, 0x0F, 0xBB, 0x05, 0xD0, 0xB1, 0x8F, 0xC3, 0x53, 0xAA, 0x82, 0x07, 0x4F, 0x3C, 0xD1
                },
                Hash = new byte[]
                {
                    0xD4, 0x21, 0x1B, 0xDF, 0xBD, 0x15, 0x9F, 0x28, 0xB8, 0xAD, 0x15, 0x34, 0x67, 0xFC, 0xD3, 0xF8,
                    0xE5, 0x85, 0x2B, 0xBE, 0x05, 0xD0, 0xB1, 0x8F, 0xB5, 0xFC, 0x6B, 0x40, 0x80, 0x1E, 0x32, 0x7E,
                    0xE7, 0x5A, 0xF2, 0xE0, 0x6E, 0x98, 0x23, 0xF9, 0xF8, 0x22, 0x62, 0x51, 0x98, 0xAF, 0xE0, 0x12,
                    0x5D, 0xDA, 0x28, 0x88, 0x1C, 0xA4, 0x58, 0x88, 0x5B, 0xE7, 0x31, 0x5F, 0x00, 0x97, 0x4C, 0x2F,
                    0x9E, 0xE0, 0xC2, 0x57, 0x48, 0x46, 0xD3, 0xD5, 0x7A, 0x92, 0x0F, 0xBB, 0x61, 0xFB, 0xBD, 0x66,
                    0xE2, 0x47, 0x7D, 0x1C, 0x68, 0xC8, 0xE6, 0xE3, 0x02, 0xF8, 0x43, 0x34, 0x75, 0xC5, 0x0A, 0x28,
                    0x1C, 0x03, 0x82, 0xD7, 0xBD, 0x8B, 0x98, 0x70, 0x05, 0x6A, 0x89, 0xEA, 0xF4, 0x1D, 0x3B, 0x01,
                    0x81, 0x35, 0x30, 0x6D, 0xDA, 0x5A, 0x59, 0xAC, 0x1E, 0x0A, 0xB1, 0xEC, 0x16, 0x80, 0xF4, 0x6A,
                    0x5C, 0x75, 0x90, 0x8F, 0x4A, 0xCF, 0x67, 0x44, 0x95, 0x65, 0x7C, 0xCF, 0xF6, 0x0B, 0x3F, 0x53,
                    0x87, 0x83, 0x33, 0x69, 0xEC, 0x57, 0x38, 0x85, 0x06, 0x29, 0xFF, 0x61, 0x97, 0xED, 0xA0, 0x10,
                    0xCB, 0x90, 0x98, 0x8D, 0xAC, 0x03, 0x8A, 0x17, 0xCC, 0x6E, 0x82, 0xFC, 0x9D, 0x6B, 0x00, 0xB0,
                    0xF9, 0xAB, 0x4D, 0x9C, 0x29, 0x25, 0x89, 0xA2, 0xEC, 0x43, 0x32, 0x7D, 0x8E, 0x51, 0x5C, 0xB2,
                    0x70, 0x17, 0xF9, 0xC2, 0xFE, 0x26, 0x7A, 0xA3, 0x1A, 0x64, 0xCC, 0xF6, 0x07, 0x4F, 0x3C, 0xD1,
                    0xC4, 0xFB, 0xD2, 0x37, 0x00, 0xE7, 0x5F, 0xAE, 0x32, 0x9C, 0x52, 0x8D, 0x84, 0x6C, 0xC8, 0xAF,
                    0x8D, 0x65, 0xD6, 0xB2, 0x09, 0x64, 0xA3, 0x5D, 0x7E, 0x58, 0xDB, 0x70, 0xA1, 0x0A, 0xBE, 0xC6,
                    0x08, 0x5B, 0x4E, 0x8C, 0x9B, 0xF8, 0xB5, 0xE0, 0x7C, 0xE2, 0xAB, 0xF2, 0x80, 0xFF, 0x69, 0x49,
                    0xC3, 0x53, 0xAA, 0x82, 0x45, 0x88, 0x32, 0x4E, 0x2A, 0x91, 0xCD, 0xE1, 0xBC, 0xBD, 0x8C, 0xF8,
                    0xAE, 0xEE, 0xEF, 0xE9, 0x64, 0xF9, 0x10, 0x5C, 0x95, 0x7D, 0x75, 0x57, 0x40, 0x79, 0x85, 0x82
                }
            };
        }

        public static HdrKey Str()
        {
            return new HdrKey
            {
                CryptoExtension = HdrCryptoExtension.str,
                Header = new List<byte[]>
                {
                    new byte[] {0x53, 0x54, 0x52, 0x4D} //STRM
                },
                Init = new byte[]
                {
                    0x78, 0x56, 0x34, 0x12, 0x78, 0x56, 0x78, 0x56, 0x78, 0x56, 0xBC, 0x9A, 0x78, 0x56, 0xFF, 0xDE
                },
                Key = new byte[]
                {
                    0x1D, 0xE3, 0xFF, 0x47, 0xB4, 0xDE, 0xA3, 0xE0, 0xE3, 0xB0, 0x5F, 0x35, 0x09, 0xE3, 0x1E, 0x12
                },
                Hash = new byte[]
                {
                    0xBC, 0xA3, 0x76, 0x10, 0x94, 0x92, 0xB2, 0x68, 0xE6, 0x15, 0xFB, 0x40, 0x8B, 0x99, 0x4F, 0xC1,
                    0xFD, 0xA6, 0x7E, 0xDD, 0x3E, 0xCA, 0x3B, 0x56, 0x83, 0xCD, 0xD5, 0x17, 0x04, 0xA8, 0xE1, 0x4B,
                    0xFC, 0x69, 0x13, 0x07, 0xDC, 0x16, 0xBD, 0x03, 0x4A, 0x3A, 0x22, 0x65, 0x26, 0xE6, 0xA7, 0x7F,
                    0xE3, 0xB0, 0x5F, 0x35, 0x98, 0x2F, 0x25, 0xF1, 0x18, 0xF3, 0xC0, 0x00, 0xD6, 0xBB, 0xF5, 0xF1,
                    0x34, 0x97, 0x25, 0x78, 0xF9, 0xB0, 0x24, 0x33, 0x07, 0x09, 0xD7, 0xD3, 0xC2, 0x8E, 0x15, 0x9D,
                    0x56, 0xF0, 0x03, 0x00, 0xEE, 0x80, 0x1A, 0xFB, 0x01, 0xB0, 0xC2, 0xAE, 0xA7, 0xD6, 0x2F, 0xFE,
                    0x9C, 0xFA, 0xD4, 0xB2, 0xB4, 0xDE, 0xA3, 0xE0, 0x05, 0xFD, 0x55, 0x2C, 0x13, 0x66, 0x77, 0x07,
                    0xB1, 0x82, 0xC1, 0x0A, 0x0A, 0x0E, 0x10, 0xEB, 0x0A, 0x82, 0xF8, 0x98, 0x66, 0xAE, 0xE0, 0x89,
                    0x48, 0x71, 0x86, 0x9A, 0x7A, 0xFA, 0x7A, 0x85, 0x73, 0x6C, 0x9A, 0x13, 0x7B, 0x87, 0xDB, 0x83,
                    0x70, 0xDF, 0x1C, 0xA3, 0x48, 0x5B, 0xB0, 0x9E, 0x1D, 0xE3, 0xFF, 0x47, 0x59, 0x8D, 0xEE, 0xA8,
                    0xC1, 0x00, 0x95, 0xC5, 0x25, 0x31, 0xA1, 0x1C, 0xBB, 0x92, 0x63, 0xCB, 0xB0, 0x65, 0x21, 0x50,
                    0x27, 0x01, 0x28, 0x07, 0x7F, 0x0A, 0x2A, 0x20, 0xEB, 0xF9, 0x9B, 0x84, 0x20, 0x55, 0x17, 0x88,
                    0xA8, 0x82, 0x90, 0xA7, 0xBB, 0x2D, 0x36, 0x31, 0xF5, 0xD7, 0x6B, 0xB9, 0xAD, 0xF9, 0xFA, 0x81,
                    0x4A, 0x2C, 0xAF, 0x7A, 0xE1, 0xF2, 0xD1, 0xE5, 0x11, 0xCF, 0xE5, 0x95, 0x3B, 0xD7, 0x9B, 0x8C,
                    0x1A, 0x7C, 0xF2, 0x7F, 0x23, 0xB8, 0x0D, 0xCE, 0x9B, 0x78, 0x5F, 0x71, 0xE9, 0x44, 0xFF, 0x70,
                    0x7D, 0x8D, 0x44, 0x8E, 0xC7, 0x8B, 0x6C, 0xF4, 0x4B, 0x48, 0x7E, 0xB5, 0x22, 0x44, 0x4B, 0x54,
                    0x93, 0x0D, 0x26, 0x08, 0xBB, 0x82, 0x10, 0xF3, 0x1E, 0xE5, 0xC2, 0x2B, 0x85, 0xF9, 0x45, 0xD8,
                    0x1D, 0x72, 0x4E, 0xF8, 0x37, 0xA8, 0x44, 0x57, 0xA3, 0xC8, 0x56, 0xAF, 0x09, 0xE3, 0x1E, 0x12
                }
            };
        }

        public static HdrKey Dat()
        {
            return new HdrKey
            {
                CryptoExtension = HdrCryptoExtension.dat,
                Init = new byte[]
                {
                    0x78, 0x56, 0x34, 0x12, 0x78, 0x56, 0x78, 0x56, 0x78, 0x56, 0xBC, 0x9A, 0x78, 0x56, 0xFF, 0xDE
                },
                Key = new byte[]
                {
                    0x1D, 0xE3, 0xFF, 0x47, 0xB4, 0xDE, 0xA3, 0xE0, 0xE3, 0xB0, 0x5F, 0x35, 0x09, 0xE3, 0x1E, 0x12
                },
                Hash = new byte[]
                {
                    0xBC, 0xA3, 0x76, 0x10, 0x94, 0x92, 0xB2, 0x68, 0xE6, 0x15, 0xFB, 0x40, 0x8B, 0x99, 0x4F, 0xC1,
                    0xFD, 0xA6, 0x7E, 0xDD, 0x3E, 0xCA, 0x3B, 0x56, 0x83, 0xCD, 0xD5, 0x17, 0x04, 0xA8, 0xE1, 0x4B,
                    0xFC, 0x69, 0x13, 0x07, 0xDC, 0x16, 0xBD, 0x03, 0x4A, 0x3A, 0x22, 0x65, 0x26, 0xE6, 0xA7, 0x7F,
                    0xE3, 0xB0, 0x5F, 0x35, 0x98, 0x2F, 0x25, 0xF1, 0x18, 0xF3, 0xC0, 0x00, 0xD6, 0xBB, 0xF5, 0xF1,
                    0x34, 0x97, 0x25, 0x78, 0xF9, 0xB0, 0x24, 0x33, 0x07, 0x09, 0xD7, 0xD3, 0xC2, 0x8E, 0x15, 0x9D,
                    0x56, 0xF0, 0x03, 0x00, 0xEE, 0x80, 0x1A, 0xFB, 0x01, 0xB0, 0xC2, 0xAE, 0xA7, 0xD6, 0x2F, 0xFE,
                    0x9C, 0xFA, 0xD4, 0xB2, 0xB4, 0xDE, 0xA3, 0xE0, 0x05, 0xFD, 0x55, 0x2C, 0x13, 0x66, 0x77, 0x07,
                    0xB1, 0x82, 0xC1, 0x0A, 0x0A, 0x0E, 0x10, 0xEB, 0x0A, 0x82, 0xF8, 0x98, 0x66, 0xAE, 0xE0, 0x89,
                    0x48, 0x71, 0x86, 0x9A, 0x7A, 0xFA, 0x7A, 0x85, 0x73, 0x6C, 0x9A, 0x13, 0x7B, 0x87, 0xDB, 0x83,
                    0x70, 0xDF, 0x1C, 0xA3, 0x48, 0x5B, 0xB0, 0x9E, 0x1D, 0xE3, 0xFF, 0x47, 0x59, 0x8D, 0xEE, 0xA8,
                    0xC1, 0x00, 0x95, 0xC5, 0x25, 0x31, 0xA1, 0x1C, 0xBB, 0x92, 0x63, 0xCB, 0xB0, 0x65, 0x21, 0x50,
                    0x27, 0x01, 0x28, 0x07, 0x7F, 0x0A, 0x2A, 0x20, 0xEB, 0xF9, 0x9B, 0x84, 0x20, 0x55, 0x17, 0x88,
                    0xA8, 0x82, 0x90, 0xA7, 0xBB, 0x2D, 0x36, 0x31, 0xF5, 0xD7, 0x6B, 0xB9, 0xAD, 0xF9, 0xFA, 0x81,
                    0x4A, 0x2C, 0xAF, 0x7A, 0xE1, 0xF2, 0xD1, 0xE5, 0x11, 0xCF, 0xE5, 0x95, 0x3B, 0xD7, 0x9B, 0x8C,
                    0x1A, 0x7C, 0xF2, 0x7F, 0x23, 0xB8, 0x0D, 0xCE, 0x9B, 0x78, 0x5F, 0x71, 0xE9, 0x44, 0xFF, 0x70,
                    0x7D, 0x8D, 0x44, 0x8E, 0xC7, 0x8B, 0x6C, 0xF4, 0x4B, 0x48, 0x7E, 0xB5, 0x22, 0x44, 0x4B, 0x54,
                    0x93, 0x0D, 0x26, 0x08, 0xBB, 0x82, 0x10, 0xF3, 0x1E, 0xE5, 0xC2, 0x2B, 0x85, 0xF9, 0x45, 0xD8,
                    0x1D, 0x72, 0x4E, 0xF8, 0x37, 0xA8, 0x44, 0x57, 0xA3, 0xC8, 0x56, 0xAF, 0x09, 0xE3, 0x1E, 0x12
                }
            };
        }

        public static HdrKey Bmp()
        {
            return new HdrKey
            {
                CryptoExtension = HdrCryptoExtension.bmp,
                Header = new List<byte[]>
                {
                    new byte[] {0x42, 0x4D} //BM
                },
                Init = new byte[]
                {
                    0x78, 0x56, 0x34, 0x12, 0x78, 0x56, 0x78, 0x56, 0x78, 0x56, 0xBC, 0x9A, 0x78, 0x56, 0xFF, 0xDE
                },
                Key = new byte[]
                {
                    0xE9, 0x8A, 0x9A, 0xF6, 0x24, 0x72, 0xF4, 0x09, 0x63, 0x3C, 0x2A, 0xE3, 0xFE, 0x31, 0xF1, 0x02
                },
                Hash = new byte[]
                {
                    0x3E, 0xA6, 0x82, 0x40, 0xE3, 0xA9, 0x26, 0x14, 0xC7, 0x01, 0x6A, 0x56, 0x01, 0xC5, 0x94, 0xE8,
                    0x59, 0x5C, 0x93, 0x18, 0x24, 0x72, 0xF4, 0x09, 0x89, 0xCC, 0x7D, 0x41, 0xAC, 0x89, 0x58, 0xDF,
                    0x22, 0xA8, 0xB9, 0x24, 0x9D, 0x26, 0x6F, 0x8B, 0xDC, 0x1E, 0xAF, 0xCC, 0xEB, 0x06, 0x05, 0x22,
                    0x5D, 0x5C, 0x89, 0x77, 0x35, 0x1C, 0xE2, 0xEF, 0xA6, 0x3B, 0x30, 0x74, 0xDB, 0x5F, 0x6A, 0xB7,
                    0xF5, 0x11, 0xDC, 0xC2, 0x43, 0xF3, 0xF6, 0x56, 0xE9, 0x8A, 0x9A, 0xF6, 0x6F, 0xBB, 0xA5, 0x73,
                    0x3B, 0xD8, 0xCF, 0xDC, 0x7D, 0x2B, 0x78, 0xE8, 0x3D, 0x93, 0x98, 0xC2, 0xAD, 0x07, 0xA6, 0xA2,
                    0xF4, 0x66, 0x59, 0xF1, 0xB8, 0x82, 0x81, 0x4F, 0x6D, 0x8D, 0x5C, 0xA4, 0xE0, 0x8E, 0x22, 0xB9,
                    0x5D, 0x0E, 0x5E, 0x3A, 0x08, 0xA0, 0xA7, 0xDA, 0x6D, 0xD4, 0xFB, 0x4C, 0x60, 0x31, 0x62, 0x38,
                    0xEE, 0x26, 0x5A, 0x20, 0xC3, 0x48, 0x33, 0x99, 0x26, 0x9B, 0x2A, 0xF2, 0xD9, 0xC7, 0x55, 0x01,
                    0x1A, 0x2E, 0x67, 0x5D, 0xBA, 0x4F, 0x0F, 0xD0, 0xEC, 0x8E, 0xD4, 0xC0, 0xC2, 0x27, 0x22, 0xA7,
                    0x48, 0xDC, 0x22, 0xB0, 0x28, 0x98, 0xDC, 0x9F, 0x29, 0xF5, 0xD0, 0xF7, 0xE7, 0x72, 0x0B, 0x30,
                    0x96, 0x90, 0xD9, 0xA0, 0x4C, 0x47, 0x88, 0x10, 0xEA, 0x47, 0xB4, 0xA9, 0xFD, 0x5A, 0xB2, 0x1C,
                    0x46, 0x11, 0xF9, 0x86, 0xE4, 0x34, 0x84, 0x58, 0x16, 0x61, 0x2C, 0x61, 0xFE, 0x31, 0xF1, 0x02,
                    0x22, 0x90, 0x71, 0xE0, 0xB0, 0x70, 0xBC, 0x2D, 0x5E, 0xB9, 0xFA, 0x04, 0x63, 0x24, 0x31, 0xC7,
                    0xB2, 0x8F, 0x80, 0x97, 0xCE, 0x3D, 0x54, 0xBA, 0x7B, 0xAF, 0xFE, 0xEC, 0x0B, 0x8C, 0xE2, 0x91,
                    0x9E, 0x88, 0x66, 0x55, 0x24, 0xF5, 0xC0, 0xF2, 0x30, 0xF6, 0x4A, 0x26, 0x17, 0x3B, 0x70, 0x39,
                    0x63, 0x3C, 0x2A, 0xE3, 0x20, 0xB7, 0xD9, 0x37, 0x0A, 0x15, 0xA5, 0x29, 0x22, 0x86, 0x47, 0x4F,
                    0x66, 0x22, 0x51, 0x74, 0x01, 0xD1, 0x60, 0xDB, 0x93, 0xE2, 0x19, 0x5A, 0x2E, 0x3E, 0xD2, 0xC5
                }
            };
        }

        public static HdrKey Jpg()
        {
            return new HdrKey
            {
                CryptoExtension = HdrCryptoExtension.jpg,
                Header = new List<byte[]>
                {
                    new byte[] {0xFF, 0xD8, 0xFF, 0xE0}
                },
                Init = new byte[]
                {
                    0x78, 0x56, 0x34, 0x12, 0x78, 0x56, 0x78, 0x56, 0x78, 0x56, 0xBC, 0x9A, 0x78, 0x56, 0xFF, 0xDE
                },
                Key = new byte[]
                {
                    0x92, 0xB0, 0xE4, 0x75, 0xCF, 0x92, 0xA2, 0xFA, 0x37, 0x18, 0x2E, 0x34, 0x90, 0x8D, 0xD9, 0x0A
                },
                Hash = new byte[]
                {
                    0x60, 0x1A, 0x8A, 0xC9, 0x00, 0x05, 0x02, 0x68, 0x83, 0xAD, 0xA0, 0x8B, 0x4F, 0x2C, 0x48, 0x5B,
                    0xA3, 0x0A, 0x20, 0xF2, 0xCF, 0x92, 0xA2, 0xFA, 0x45, 0xA0, 0x40, 0xC8, 0x14, 0xF7, 0x7C, 0xD5,
                    0x38, 0x15, 0x4E, 0x49, 0x26, 0x9E, 0x53, 0x91, 0x14, 0x95, 0x61, 0x6B, 0x66, 0x4A, 0xA4, 0x69,
                    0x3D, 0xBB, 0xBB, 0x86, 0x74, 0x59, 0x40, 0x54, 0xA8, 0x7A, 0x6A, 0xA7, 0xDD, 0x3C, 0xD4, 0xB4,
                    0x9D, 0x19, 0x7D, 0x13, 0x57, 0x92, 0x3F, 0x12, 0x92, 0xB0, 0xE4, 0x75, 0x6B, 0x71, 0xAA, 0x53,
                    0x06, 0x27, 0xB1, 0x3D, 0x88, 0x9C, 0x81, 0x86, 0x0B, 0xF3, 0x12, 0xE5, 0x1B, 0x23, 0xF6, 0xE9,
                    0x43, 0x6B, 0x81, 0x0D, 0x81, 0x00, 0x53, 0x0F, 0xA1, 0x3D, 0x41, 0x68, 0x79, 0xD6, 0x29, 0x7E,
                    0x22, 0x66, 0x60, 0x01, 0xF5, 0x62, 0xE1, 0xFD, 0xA2, 0x15, 0xF9, 0x69, 0x6D, 0xFC, 0xD0, 0x6D,
                    0x6B, 0x0F, 0xCD, 0x92, 0x4C, 0x46, 0x88, 0xC1, 0xDE, 0x4F, 0x3D, 0xBA, 0x25, 0x24, 0xE4, 0x69,
                    0xAF, 0xD0, 0x8E, 0x96, 0x80, 0x05, 0xC0, 0xC7, 0x03, 0xE3, 0xAC, 0xBA, 0xA6, 0x6B, 0x9D, 0xDE,
                    0x05, 0x9B, 0x7A, 0xF4, 0xEE, 0xD0, 0x9B, 0x68, 0x83, 0x0C, 0x88, 0xBC, 0xBB, 0xF8, 0xA5, 0xB1,
                    0x05, 0xC5, 0x62, 0xCA, 0xA3, 0x7F, 0x62, 0xD4, 0xEE, 0x95, 0xBE, 0x94, 0xE7, 0x6A, 0xF5, 0xF2,
                    0x8A, 0x41, 0xBE, 0xE8, 0x1E, 0x3C, 0x87, 0x59, 0x44, 0x56, 0x44, 0xC7, 0x90, 0x8D, 0xD9, 0x0A,
                    0x82, 0x70, 0xCF, 0xB6, 0xC1, 0x1F, 0x4D, 0x68, 0x83, 0xFF, 0x71, 0x67, 0xEA, 0x7B, 0xB4, 0xF9,
                    0xF0, 0xEA, 0xEC, 0xD0, 0xEA, 0x02, 0x43, 0xA4, 0x5B, 0x91, 0xC3, 0xE9, 0x38, 0xB1, 0xBA, 0xA8,
                    0x65, 0x5D, 0xEA, 0xAF, 0x48, 0xF3, 0x73, 0x2D, 0xC2, 0x5A, 0x72, 0xC6, 0x12, 0x40, 0x72, 0x80,
                    0x37, 0x18, 0x2E, 0x34, 0x1D, 0x1D, 0xA1, 0x93, 0x6F, 0xEF, 0x4F, 0xB1, 0xA3, 0xB6, 0x59, 0xA5,
                    0xE3, 0xCC, 0x2C, 0x19, 0x60, 0x23, 0x92, 0xEB, 0xB3, 0xB2, 0x06, 0x2E, 0x32, 0x9B, 0x52, 0x4C
                }
            };
        }

        public static HdrKey Ogg()
        {
            return new HdrKey
            {
                CryptoExtension = HdrCryptoExtension.ogg,
                Header = new List<byte[]>
                {
                    new byte[] {0x4F, 0x67, 0x67, 0x53} // OggS
                },
                Init = new byte[]
                {
                    0x78, 0x56, 0x34, 0x12, 0x78, 0x56, 0x78, 0x56, 0x78, 0x56, 0xBC, 0x9A, 0x78, 0x56, 0xFF, 0xDE
                },
                Key = new byte[]
                {
                    0xCA, 0x5C, 0xE4, 0xD8, 0xF4, 0x54, 0xE6, 0xE1, 0x0B, 0x9D, 0x24, 0x28, 0xF1, 0xB4, 0xCE, 0x8A
                },
                Hash = new byte[]
                {
                    0x55, 0xD8, 0xD2, 0xCC, 0x86, 0x19, 0x59, 0xDA, 0x1A, 0xA7, 0x87, 0x20, 0x12, 0xB0, 0x83, 0xE7,
                    0xF7, 0x3E, 0xCA, 0xAC, 0xF4, 0x54, 0xE6, 0xE1, 0xAA, 0xDD, 0x04, 0xFB, 0x27, 0x55, 0x15, 0x79,
                    0x0D, 0xBF, 0xC7, 0xFF, 0x60, 0x81, 0x01, 0xE7, 0xC9, 0x3C, 0xDA, 0xD7, 0xEE, 0xA9, 0x6A, 0xAC,
                    0x35, 0x89, 0x41, 0x7C, 0xE6, 0x84, 0xBD, 0xD2, 0xE4, 0x48, 0xF0, 0x3F, 0xD4, 0xE9, 0xB4, 0x1B,
                    0xC5, 0x82, 0xAD, 0xFD, 0x4D, 0xFC, 0x8A, 0x17, 0xCA, 0x5C, 0xE4, 0xD8, 0x71, 0x20, 0x5D, 0xEA,
                    0xB8, 0xE9, 0xCE, 0xCC, 0x73, 0xB2, 0x2B, 0x80, 0x3E, 0x25, 0x4B, 0x02, 0xF6, 0xEC, 0x10, 0x58,
                    0xD2, 0xCE, 0x87, 0xEF, 0x90, 0x7D, 0x8E, 0x73, 0x4D, 0x6A, 0xE8, 0x02, 0xFD, 0x3C, 0xAC, 0xFD,
                    0x2C, 0x64, 0xA7, 0x40, 0x4C, 0xD1, 0x01, 0xF0, 0xCD, 0xE4, 0x03, 0x22, 0x77, 0x51, 0xBD, 0x1D,
                    0x7D, 0x89, 0xA7, 0x6C, 0x57, 0x33, 0x17, 0x7E, 0xEF, 0xF4, 0x8B, 0x33, 0xED, 0xD0, 0xEB, 0x24,
                    0xD7, 0x41, 0xA8, 0x15, 0x4D, 0xD4, 0xE0, 0x88, 0xC7, 0xF0, 0x04, 0x77, 0xCA, 0x94, 0x47, 0xCB,
                    0x41, 0xCD, 0xE4, 0x55, 0xBD, 0x3A, 0x98, 0x7A, 0xE9, 0x80, 0x14, 0x72, 0x60, 0xD3, 0x24, 0xDB,
                    0x62, 0xF1, 0x71, 0x0B, 0x90, 0xA3, 0x66, 0xDA, 0xCC, 0x9B, 0xBD, 0x25, 0x18, 0xAA, 0x0D, 0xB0,
                    0x2E, 0xD8, 0xFB, 0x1C, 0xB6, 0x1A, 0xF5, 0x74, 0x89, 0x52, 0xEB, 0x8B, 0xF1, 0xB4, 0xCE, 0x8A,
                    0xEE, 0x1B, 0xBF, 0x06, 0xBB, 0x02, 0xF8, 0xFB, 0x0C, 0xC2, 0x9A, 0xE7, 0x17, 0x4B, 0xEF, 0x53,
                    0x05, 0xC9, 0xAA, 0xA9, 0xE9, 0x5C, 0x4F, 0x5B, 0x54, 0x19, 0x5F, 0x21, 0x94, 0xAF, 0x6F, 0x83,
                    0x28, 0x8F, 0xE5, 0xB9, 0x5E, 0xDC, 0x44, 0x06, 0xBC, 0xEC, 0x83, 0xB8, 0x41, 0x8E, 0x35, 0x0A,
                    0x0B, 0x9D, 0x24, 0x28, 0xB5, 0x97, 0x8B, 0x14, 0x37, 0x39, 0x15, 0xD1, 0x30, 0x43, 0xC6, 0x6A,
                    0x49, 0x93, 0xC4, 0x94, 0x88, 0xDC, 0xF3, 0x7E, 0x5A, 0x89, 0x6C, 0x70, 0x8F, 0x22, 0x3C, 0x39
                }
            };
        }

        public static HdrKey Pvi()
        {
            return new HdrKey
            {
                CryptoExtension = HdrCryptoExtension.pvi,
                Init = new byte[]
                {
                    0x78, 0x56, 0x34, 0x12, 0x78, 0x56, 0x78, 0x56, 0x78, 0x56, 0xBC, 0x9A, 0x78, 0x56, 0xFF, 0xDE
                },
                Key = new byte[]
                {
                    0x15, 0x7F, 0x4B, 0x0D, 0xDC, 0xAA, 0xCC, 0xBF, 0x01, 0xE5, 0xC7, 0x64, 0xDE, 0xE3, 0x8E, 0x59
                },
                Hash = new byte[]
                {
                    0x1E, 0x10, 0x62, 0x8E, 0x0D, 0x46, 0xC7, 0x5C, 0xEE, 0x14, 0x1C, 0x7E, 0x13, 0x4F, 0xF5, 0xE9,
                    0xB6, 0x2D, 0x4F, 0x0D, 0xDC, 0xAA, 0xCC, 0xBF, 0x26, 0x44, 0x37, 0xB3, 0x23, 0xDA, 0x01, 0x44,
                    0x42, 0x2E, 0x27, 0x51, 0x0D, 0x97, 0xC3, 0x1B, 0xAA, 0xC6, 0x9F, 0x40, 0xD5, 0xCE, 0x3F, 0x3F,
                    0xAD, 0x14, 0x95, 0xD7, 0xFA, 0x45, 0x9E, 0x5C, 0x00, 0xC7, 0xE1, 0x9F, 0xAB, 0x3E, 0x10, 0x2C,
                    0xE1, 0x4C, 0x54, 0x77, 0x66, 0xFC, 0xFE, 0x3A, 0x15, 0x7F, 0x4B, 0x0D, 0x47, 0xE2, 0xE6, 0x47,
                    0x0D, 0x8F, 0x7B, 0x8F, 0x58, 0x64, 0xFD, 0xE9, 0x1B, 0x7E, 0x7E, 0xA9, 0xB0, 0x4E, 0xB5, 0xFF,
                    0x70, 0x82, 0xB5, 0xD1, 0xD3, 0x90, 0xD8, 0x81, 0x6D, 0x13, 0x77, 0x26, 0xF6, 0xF1, 0xE8, 0xE5,
                    0x6C, 0xAD, 0xBA, 0xB9, 0xE0, 0x25, 0xA9, 0xCA, 0xF0, 0x61, 0x46, 0x58, 0xCD, 0x58, 0xA1, 0xA6,
                    0xCA, 0x7B, 0x43, 0x7E, 0xE3, 0x8D, 0xBB, 0x0D, 0x07, 0x1E, 0x7F, 0xC7, 0xC1, 0x43, 0xE8, 0xA4,
                    0x5F, 0xAF, 0x15, 0x7D, 0x32, 0xB6, 0x1A, 0x4B, 0x56, 0x58, 0x5D, 0xC9, 0x4C, 0x30, 0xD8, 0xCC,
                    0xD3, 0xDC, 0x71, 0x50, 0x93, 0xC3, 0x21, 0xEB, 0xBB, 0xA9, 0xF2, 0xC5, 0x59, 0xF2, 0xD6, 0x0B,
                    0x01, 0x96, 0x40, 0x11, 0x87, 0x90, 0xC9, 0x7A, 0xC3, 0x03, 0xA4, 0x31, 0x24, 0x34, 0x56, 0x9B,
                    0xDA, 0x4C, 0x90, 0x01, 0x64, 0x80, 0xA2, 0x60, 0xCC, 0x7C, 0x2C, 0x55, 0xDE, 0xE3, 0x8E, 0x59,
                    0x96, 0x28, 0xE3, 0x19, 0x8F, 0xC2, 0x5C, 0x8D, 0xAF, 0xAC, 0xFA, 0x5D, 0x5E, 0x81, 0x9A, 0x33,
                    0x14, 0xCA, 0x40, 0x01, 0x4E, 0x17, 0xC4, 0x73, 0x10, 0x13, 0x05, 0x3C, 0xEF, 0xA6, 0x7A, 0xE9,
                    0x18, 0x12, 0xDF, 0x58, 0x42, 0xF4, 0xA7, 0xCC, 0xF8, 0x75, 0xFF, 0xA1, 0x0A, 0x2C, 0xA1, 0xDE,
                    0x01, 0xE5, 0xC7, 0x64, 0xD4, 0x90, 0xB7, 0xC4, 0xBE, 0xBD, 0xEA, 0x72, 0x9A, 0xA2, 0x99, 0xAE,
                    0xC5, 0x27, 0xE5, 0xFC, 0x29, 0x1A, 0xA7, 0x2A, 0xB1, 0x82, 0xD8, 0xD1, 0x20, 0x42, 0xB8, 0xC9
                }
            };
        }

        public static HdrKey Scr()
        {
            return new HdrKey
            {
                CryptoExtension = HdrCryptoExtension.scr,
                Header = new List<byte[]>
                {
                    new byte[] {0x53, 0x43, 0x52, 0x30} //SCR0
                },
                Init = new byte[]
                {
                    0x78, 0x56, 0x34, 0x12, 0x78, 0x56, 0x78, 0x56, 0x78, 0x56, 0xBC, 0x9A, 0x78, 0x56, 0xFF, 0xDE
                },
                Key = new byte[]
                {
                    0x9E, 0xF3, 0xA7, 0x10, 0xC6, 0xB0, 0x97, 0xDC, 0xA1, 0x69, 0xDA, 0xDD, 0x8D, 0x2E, 0x74, 0x7B
                },
                Hash = new byte[]
                {
                    0x5C, 0x23, 0x55, 0x3F, 0xC6, 0x05, 0x6B, 0x8D, 0xED, 0xC5, 0x11, 0x01, 0x39, 0xA4, 0xE8, 0x11,
                    0x36, 0x34, 0x1F, 0x7C, 0xC6, 0xB0, 0x97, 0xDC, 0xD0, 0xEC, 0x61, 0x60, 0x48, 0x87, 0x37, 0x99,
                    0xEA, 0xF6, 0xED, 0x14, 0x04, 0x62, 0x1D, 0x37, 0x84, 0xC6, 0x3F, 0x57, 0x13, 0x70, 0x1D, 0x37,
                    0x9D, 0xBA, 0xE1, 0xD3, 0x8C, 0x33, 0x60, 0x6F, 0x61, 0x76, 0x5A, 0x11, 0xFA, 0x1E, 0x4E, 0x63,
                    0xBD, 0xA3, 0x83, 0x00, 0xCF, 0xEE, 0x67, 0xED, 0x9E, 0xF3, 0xA7, 0x10, 0xE3, 0x73, 0xBB, 0xA3,
                    0x4D, 0x89, 0x43, 0xC0, 0x0B, 0xBD, 0x7C, 0xE9, 0x2E, 0x28, 0x09, 0xE1, 0x49, 0x7A, 0x1D, 0x0D,
                    0xD4, 0xDB, 0x77, 0x69, 0xCE, 0x27, 0x97, 0xFE, 0x70, 0xC3, 0xA5, 0x48, 0x14, 0x2A, 0xCB, 0x16,
                    0xD0, 0xA9, 0xEE, 0x66, 0x9A, 0x10, 0xFD, 0x01, 0x9D, 0x0F, 0x27, 0x7E, 0x95, 0x77, 0x4C, 0x74,
                    0xF1, 0xF5, 0x46, 0xCF, 0x33, 0x11, 0x31, 0x48, 0x6B, 0xA2, 0x31, 0x4A, 0xCB, 0x24, 0xB0, 0x67,
                    0xF1, 0x27, 0x53, 0x3F, 0x51, 0xE0, 0xF0, 0x71, 0x91, 0x45, 0xD1, 0x0A, 0x5B, 0x4D, 0x2E, 0x16,
                    0x0F, 0x54, 0x64, 0x59, 0x29, 0x78, 0x6E, 0x23, 0xAE, 0x8F, 0xB1, 0x34, 0xD8, 0x4D, 0x97, 0x34,
                    0xA6, 0x20, 0x86, 0xF5, 0x7A, 0x69, 0xA8, 0xA5, 0xEF, 0x3C, 0x21, 0x6D, 0xBA, 0x7F, 0xF4, 0x09,
                    0xB4, 0x65, 0xE5, 0x80, 0x07, 0x6B, 0xA7, 0x55, 0x7D, 0x3E, 0x04, 0x5D, 0x8D, 0x2E, 0x74, 0x7B,
                    0xF9, 0xC4, 0x3A, 0xE1, 0x36, 0x71, 0xF6, 0xEE, 0x19, 0xCA, 0xF6, 0x38, 0x25, 0xA5, 0xC1, 0x0B,
                    0xBD, 0xBD, 0x5B, 0xF3, 0x51, 0x9B, 0xBB, 0xFB, 0xBE, 0x92, 0x8E, 0x88, 0x66, 0x91, 0xDF, 0x7D,
                    0x8A, 0xD7, 0x59, 0xF5, 0xEF, 0x3F, 0x67, 0xDD, 0x6A, 0x37, 0x54, 0xFA, 0xE8, 0x78, 0x9D, 0x38,
                    0xA1, 0x69, 0xDA, 0xDD, 0x82, 0x94, 0x2F, 0xE6, 0xC1, 0x60, 0x07, 0xB9, 0xA1, 0xC2, 0x15, 0xFE,
                    0xCB, 0xFC, 0xF8, 0x6B, 0x43, 0x17, 0xB5, 0x37, 0x7C, 0x78, 0x2F, 0x2A, 0x3F, 0x0F, 0x28, 0x9E
                }
            };
        }

        public static HdrKey Ptn()
        {
            return new HdrKey
            {
                CryptoExtension = HdrCryptoExtension.ptn,
                Header = new List<byte[]>
                {
                    new byte[] {0x50, 0x54, 0x4E, 0x45} // PTNE
                },
                Init = new byte[]
                {
                    0x78, 0x56, 0x34, 0x12, 0x78, 0x56, 0x78, 0x56, 0x78, 0x56, 0xBC, 0x9A, 0x78, 0x56, 0xFF, 0xDE
                },
                Key = new byte[]
                {
                    0x76, 0xF1, 0x67, 0x76, 0xFE, 0xA4, 0x19, 0xD5, 0x46, 0x50, 0x01, 0x18, 0xD9, 0xE9, 0xF8, 0xE4
                },
                Hash = new byte[]
                {
                    0x11, 0x2C, 0xC9, 0x59, 0xF0, 0x6B, 0xE4, 0xF4, 0x6F, 0x5D, 0xAD, 0xCF, 0x45, 0xF4, 0x70, 0xDC,
                    0x7F, 0x28, 0x07, 0xBB, 0x7D, 0x18, 0xBB, 0x82, 0x9E, 0xA5, 0xB0, 0xE5, 0xD9, 0xB2, 0xFE, 0x22,
                    0xA8, 0x1A, 0xEC, 0x55, 0x5C, 0x10, 0x6F, 0xF4, 0xD5, 0x2B, 0x70, 0x0B, 0x4F, 0x0E, 0x1B, 0x6C,
                    0x46, 0x50, 0x01, 0x18, 0xBF, 0x49, 0xB9, 0x0B, 0x17, 0x16, 0x71, 0x0D, 0x37, 0xFF, 0x1A, 0xD1,
                    0x15, 0xB2, 0xBA, 0x82, 0xC9, 0x96, 0x1C, 0x00, 0xED, 0x0C, 0x47, 0x4B, 0xF8, 0x2F, 0xB3, 0x89,
                    0xE2, 0xB2, 0x82, 0x31, 0xD1, 0x3A, 0x3D, 0xE0, 0x79, 0x07, 0x2D, 0xE0, 0xF7, 0xA1, 0x4F, 0xC8,
                    0xC2, 0xF0, 0x0A, 0x46, 0xFE, 0xA4, 0x19, 0xD5, 0x14, 0x7D, 0x1C, 0xD3, 0x82, 0x3D, 0xB7, 0xDD,
                    0xEC, 0x71, 0x30, 0xAE, 0x75, 0xE2, 0x86, 0x89, 0x73, 0x80, 0x15, 0xAF, 0xA9, 0xB5, 0xCB, 0xF6,
                    0x3A, 0xE4, 0xEC, 0xC9, 0x20, 0x8E, 0x50, 0x36, 0x99, 0x77, 0x67, 0x63, 0x87, 0x7C, 0x63, 0xF9,
                    0xC3, 0x5F, 0xAE, 0x47, 0x23, 0x28, 0x95, 0x36, 0x76, 0xF1, 0x67, 0x76, 0xCD, 0xCA, 0x05, 0x26,
                    0xAE, 0xCA, 0x9D, 0x50, 0x91, 0x13, 0x3E, 0x5A, 0xF4, 0x88, 0x27, 0xE8, 0x8C, 0x0C, 0x3E, 0xBE,
                    0x85, 0xE7, 0xF2, 0x43, 0x98, 0x29, 0x39, 0xD1, 0x4D, 0x1C, 0xCF, 0xA7, 0xC3, 0x68, 0x12, 0x72,
                    0xA0, 0xCF, 0xB9, 0xEC, 0xD2, 0x12, 0x11, 0x28, 0xE6, 0xD6, 0x40, 0x86, 0xED, 0xF9, 0x40, 0xFC,
                    0x41, 0x5C, 0x62, 0xEE, 0x7D, 0x10, 0xFC, 0x09, 0x83, 0x71, 0x62, 0xDE, 0x6D, 0x45, 0xD4, 0xF3,
                    0xF5, 0xF4, 0xBA, 0xB6, 0x4B, 0xF9, 0x7D, 0xAD, 0xAE, 0xC9, 0xDE, 0xAB, 0x94, 0x01, 0xF2, 0xD5,
                    0x9C, 0x33, 0x4B, 0x99, 0x9B, 0xA9, 0x5D, 0x1D, 0x83, 0xAC, 0xA6, 0x68, 0x2C, 0x4B, 0xD5, 0xDE,
                    0x1F, 0x74, 0x1E, 0x67, 0x9C, 0xB4, 0xF9, 0x3E, 0x0F, 0xF9, 0x02, 0x45, 0x59, 0x14, 0xD2, 0x16,
                    0xA3, 0xF4, 0xB4, 0x5A, 0x6F, 0xAC, 0xDA, 0xEE, 0x90, 0xA8, 0x0C, 0xFF, 0xD9, 0xE9, 0xF8, 0xE4
                }
            };
        }

        public byte[] Key { get; set; }
        public byte[] Hash { get; set; }
        public byte[] Init { get; set; }
        public List<byte[]> Header { get; set; }
        public HdrCryptoExtension? CryptoExtension { get; set; }

        public HdrKey()
        {
            CryptoExtension = null;
            Key = new byte[16];
            Hash = new byte[288];
            Init = new byte[16];
            Header = new List<byte[]>();
        }
    }
}